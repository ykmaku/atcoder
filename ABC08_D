#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <numeric>
#include <cmath>

using namespace std;

typedef long long int lld;

const lld mod = 1e9+7;
const lld INF = 1e9;
//const lld MAXN = 1e9;

int H,W;
char s[50][50];
int score[50][50] = {0};

void bfs(int h,int w,int x,int y,int ss)
{
    score[y][x] = ss+1;

    if (x+1 < w && score[y][x+1] > score[y][x] + 1 && s[y][x+1] != '#')
    {
        bfs(h,w,x+1,y,score[y][x]);
    }

    if (x-1 >= 0 && score[y][x-1] > score[y][x] + 1 && s[y][x-1] != '#')
    {
        bfs(h,w,x-1,y,score[y][x]);
    }

    if (y+1 < h && score[y+1][x] > score[y][x] + 1 && s[y+1][x] != '#')
    {
        bfs(h,w,x,y+1,score[y][x]);
    }

    if (y-1 >= 0 && score[y-1][x] > score[y][x] + 1 && s[y-1][x] != '#')
    {
        bfs(h,w,x,y-1,score[y][x]);
    }
}


int main()
{
    cin >> H >> W;

    for(int i = 0; i < H ; i++)
    {
        for(int j = 0; j < W; j++)
        {
            cin >> s[i][j];
        }
    }

    for(int i = 0; i < H; i++)
    {
        for(int j = 0; j < W; j++)
        {
            score[i][j] = INF;
        }
    }

    bfs(H,W,0,0,0);

    if (score[H-1][W-1] > H * W)
    {
        cout << "-1" << endl;
    }else
    {
        int cnt = 0;
        for(int i = 0; i < H; i++)
        {
            for(int j = 0; j < W; j++)
            {
                if (s[i][j] == '#')
                {
                    cnt++;
                }
            }
        }
        cout << (H*W-cnt) - score[H-1][W-1] << endl;
    }
    return 0;
}
