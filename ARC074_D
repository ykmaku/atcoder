#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <numeric>
#include <cmath>

using namespace std;

typedef long long int lld;

const lld mod = 1e9+7;
const lld INF = 1e9;
//const lld MAXN = 1e9;

int main()
{
	lld n;
	cin >> n;
	vector<vector<lld> > a(3,vector<lld>(n,0));
	for(int i = 0; i < 3; i++)
	{
		for(int j = 0; j < n; j++)
		{
			cin >> a[i][j];
		}
	}

	priority_queue<lld> back;
	priority_queue<lld,vector<lld> ,greater<lld> > front;

	for(int i = 0; i < n; i++)
	{
		front.push(a[0][i]);
	}
	for(int i = 0; i < n; i++)
	{
		back.push(a[2][i]);
	}

	lld A = accumulate(a[0].begin(),a[0].end(),(lld)0); // (lld) 0 じゃないとa[0][j]がlldでもint型で計算されてバグる
	lld C = accumulate(a[2].begin(),a[2].end(),(lld)0);
	// lld ans = A-C;
	lld AA = A,CC = C;

	vector<lld> f(n),b(n);
	for(int k = 0; k < n; k++)
	{
		front.push(a[1][k]);
		A += a[1][k];
		A -= front.top();
		front.pop();
		f[k] = A;
		//cout << k <<  "  A = " << A << endl;
	}

	for(int k = n-1; k >= 0; k--)
	{
		back.push(a[1][k]);
		C += a[1][k];
		C -= back.top();
		back.pop();
		b[k] = C;
		//cout <<  k << "  C = " << C << endl;
	}
	lld ans = max(AA-b[0],f[n-1]-CC);
	for(int i = 0; i < n-1; i++)
	{
		ans = max(ans,f[i] - b[i+1]);
	}
	cout << ans << endl;

	return 0;
}
