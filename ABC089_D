#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <numeric>
#include <cmath>

using namespace std;

typedef long long int lld;

const lld mod = 1e9+7;
const lld INF = 1e9;
//const lld MAXN = 1e9;

struct node
{
	int num,x,y;
};

int main()
{
	int h,w,d;
	cin >> h >> w >> d;
	vector<vector<lld> > a(h,vector<lld>(w,0));
	for(int i = 0; i < h; i++)
	{
		for(int j = 0; j < w; j++)
		{
			cin >> a[i][j];
		}
	}
	lld q;
	cin >> q;
	vector<pair<int,int> > lr(q);
	for(int i = 0; i < q; i++)
	{
		cin >> lr[i].first >> lr[i].second;
	}

	vector<node> p(h*w);
	for(int i = 0; i < h; i++)
	{
		for(int j = 0; j < w; j++)
		{
			p[a[i][j]-1].num = a[i][j];
			p[a[i][j]-1].x = j;
			p[a[i][j]-1].y = i;
		}
	}

	vector<lld> dist(h*w);
	for(int i = 0; i < h*w; i++)
	{
		if (p[i].num <= d)
		{ 
			dist[i] = 0;
		}else
		{
			dist[i] = dist [i-d] + abs(p[i].x - p[i-d].x) + abs(p[i].y - p[i-d].y);  //ここが大事
		}
	}

	// for(int i = 0; i < h*w; i++)
	// {
	// 	cout << i+1 << "  " << dist[i] << endl;
	// }

	for(int i = 0; i < q; i++)
	{
		cout << dist[lr[i].second-1] - dist[lr[i].first-1] << endl;
	}

	return 0;
}
